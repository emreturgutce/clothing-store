name: Deploy Workflow

on:
  push:
    branches:
      - master
    paths-ignore:
      - ".env.example"
      - ".eslintigonre"
      - ".eslintrc.json"
      - "docker-compose.yml"
      - "docker-compose.dev.yml"
      - "Dockerfile"
      - "LICENSE"
      - "nginx.conf"
      - "README.md"
  pull_request:
    branches:
      - master
    paths-ignore:
      - ".env.example"
      - ".eslintigonre"
      - ".eslintrc.json"
      - "docker-compose.yml"
      - "docker-compose.dev.yml"
      - "Dockerfile"
      - "LICENSE"
      - "nginx.conf"
      - "README.md"

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Building Image
        run: docker build -t emreturgutce/clothing-store_app -f Dockerfile.prod .
        env:
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PG_HOST: ${{ secrets.PG_HOST }}
          PG_PORT: ${{ secrets.PG_PORT }}
          PG_USER: ${{ secrets.PG_USER }}
          PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          PG_DATABASE: ${{ secrets.PG_DATABASE }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          DB_TYPE: ${{ secrets.DB_TYPE }}
          PORT: ${{ secrets.PORT }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          STRIPE_KEY: ${{ secrets.STRIPE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: Trying to Login Docker
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pushing Image to Docker Hub
        run: docker push emreturgutce/clothing-store_app
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}
    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1
    # - name: Build, tag, and push image to Amazon ECR
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
    #     IMAGE_TAG: ${{ github.sha }}
    #   run: |
    #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
